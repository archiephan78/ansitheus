---
- name: Ensuring openstack_exporter config directory exist
  ansible.builtin.file:
    path: "{{ openstack_exporter_config_dir }}"
    state: "directory"
    owner: "{{ config_owner_user }}"
    group: "{{ config_owner_group }}"
    mode: 0755

- name: Copying cloud config file for openstack exporter
  ansible.builtin.template:
    src: "{{ item }}"
    dest: "{{ openstack_exporter_config_dir }}/clouds.yml"
    mode: "0755"
  with_first_found:
    - "{{ ansitheus_custom_config_dir }}/openstack_exporter/{{ inventory_hostname }}/clouds.yml"
    - "{{ ansitheus_custom_config_dir }}/openstack_exporter/clouds.yml"
    - "{{ role_path }}/templates/clouds.yml.j2"
  notify:
    - Restart openstack_exporter container

- name: Recreating if not exist running containers
  community.general.docker_container:
    name: "{{ item.value.container_name }}"
    image: "{{ item.value.image }}"
    volumes: "{{ item.value.volumes }}"
    command: "{{ item.value.command }}"
    state: "{{ item.value.state }}"
    restart_policy: "{{ item.value.restart_policy }}"
    privileged: "{{ item.value.privileged }}"
    network_mode: "{{ item.value.network_mode }}"
    log_driver: "{{ item.value.log_driver }}"
    log_options: "{{ item.value.log_options }}"
    memory: "{{ item.value.memory }}"
    memory_swap: "{{ item.value.memory_swap }}"
    cpus: "{{ item.value.cpus }}"
    env: "{{ item.value.env }}"
  when:
    - inventory_hostname in groups[item.value.group]
    - item.value.enabled | bool
  with_dict: "{{ openstack_exporter_services }}"
