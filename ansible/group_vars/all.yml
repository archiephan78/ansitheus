---
######################
# Service VIP address
######################
ansitheus_vip_address: ""
prometheus_vip_address: "{{ ansitheus_vip_address }}"
alertmanager_vip_address: "{{ ansitheus_vip_address }}"

ansitheus_network_interface: "eth0"
keepalived_virtual_router_id: "82"
ansitheus_config_dir: "/etc/ansitheus"
ansitheus_custom_config_dir: "{{ ansitheus_config_dir }}/config"
# The group which own node_config_directory, you can use a non-root
config_owner_user: "root"
config_owner_group: "root"

network_interface: "{{ network_interface }}"
api_interface: "{{ network_interface }}"
api_interface_address: "{{ hostvars[inventory_hostname]['ansible_' + api_interface]['ipv4']['address'] }}"

###################
# Haproxy Passwords
###################
keepalived_password: "{{ keepalived_password }}"

################
# Docker options
################

docker_registry: "{{ docker_registry if docker_registry else '' }}"
docker_namespace: "{{ docker_namespace if docker_namespace else '' }}"
docker_registry_username: "{{ docker_registry_username if docker_registry_username else ''}}"
docker_registry_password: "{{ docker_registry_password if docker_registry_password else '' }}"
docker_log_driver: "json-file"
docker_log_opts:
  max-size: 30m
  max-file: '3'

##################
# Service options
##################

# Enable services
enable_common: "yes"
enable_prometheus: "yes"
enable_node_exporter: "yes"
enable_cadvisor: "yes"
enable_grafana: "yes"
enable_alertmanager: "yes"
enable_haproxy: "yes"

##################
# Port mappings
#################

prometheus_port: "9090"
alertmanager_port: "9093"
alertmanager_cluster_port: "9094"
node_exporter_port: "9100"
cadvisor_port: "8080"
grafana_port: "3000"

###############
# Image version
###############

prometheus_version: "2.52.0"
alertmanager_version: "0.27.0"
node_exporter_version: "1.8.0"
cadvisor_version: "v0.35.0"
grafana_version: "7.2.2"
haproxy_version: "lts-alpine"

##########################
# Service docker namespace
##########################

prometheus_docker_namespace: "{{ docker_namespace if docker_namespace else 'prom' }}"
alertmanager_docker_namespace: "{{ docker_namespace if docker_namespace else 'prom' }}"
node_exporter_docker_namespace: "{{ docker_namespace if docker_namespace else 'prom' }}"
grafana_docker_namespace: "{{ docker_namespace if docker_namespace else 'grafana' }}"
cadvisor_docker_namespace: "{{ docker_namespace if docker_namespace else 'cadvisor' }}"
keepalived_docker_namespace: "{{ docker_namespace if docker_namespace else 'kiennt26' }}"
haproxy_docker_namespace: "{{ docker_namespace if docker_namespace else '' }}"

####################
# Prometheus options
####################
# Special variable to handle case, you want to only ONE Prometheus running instance at time.
prometheus_single_running_at_time: "no"
prometheus_storage_retention: "90d"
prometheus_external_labels: # This is a dictionary variable
  monitor: "cloud"
prometheus_scrape_interval: "60s"
prometheus_scrape_timeout: "30s"
prometheus_evaluation_interval: "120s"
