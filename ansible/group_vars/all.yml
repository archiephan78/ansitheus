---
######################
# Service VIP address
######################
ansitheus_vip_address: ""
prometheus_server_vip_address: "{{ ansitheus_vip_address }}"
# TODO: just for now
prometheus_alertmanager_vip_address: "{{ ansitheus_vip_address }}"

ansitheus_network_interface: "eth0"
keepalived_virtual_router_id: "82"

ansitheus_conf: "/etc/ansitheus"
ansitheus_custom_conf: "{{ ansitheus_conf }}/config"
# The group which own node_config_directory, you can use a non-root
config_owner_user: "root"
config_owner_group: "root"

network_interface: "{{ network_interface }}"
api_interface: "{{ network_interface }}"
api_interface_address: "{{ hostvars[inventory_hostname]['ansible_' + api_interface]['ipv4']['address'] }}"

###############
# Haproxy Users
###############
prometheus_server_user: "admin"
prometheus_alertmanager_user: "admin"

###################
# Haproxy Passwords
###################
keepalived_password: "{{ keepalived_password }}"
prometheus_alertmanager_password: "{{ prometheus_alertmanager_password }}"
prometheus_server_password: "{{ prometheus_server_password }}"

################
# Docker options
################

docker_registry: "{{ docker_registry }}"
docker_namespace:
docker_registry_username: "{{ docker_registry_username }}"
docker_registry_password: "{{ docker_registry_password }}"
# Sets the options used by DNS resolvers by writing an options line
# into the container's /etc/resolv.conf.
# For example:
# docker_dns_servers:
#   - "8.8.8.8"
#   - "8.8.4.4"
docker_dns_servers:
# Change Docker storage drivers
# For example: docker_storage_driver: "overlay2"
docker_storage_driver:
# Change runtime directory
# For example: docker_runtime_directory: "/var/lib/docker
docker_runtime_directory:
# Can be used to set environment variables for the Docker daemon, such as:
# docker_daemon_environment:
#   - "HTTP_PROXY=http://proxy.example.com:3128/"
#   - "HTTPS_PROXY=http://proxy.example.com:3128/"
#   - "NO_PROXY=localhost,127.0.0.1"
docker_daemon_environment: []
# Global docker logging configs
# For details, please check:
# https://docs.docker.com/config/containers/logging/configure/
docker_log_driver: "json-file"
docker_log_opts:
  max-size: 10m
  max-file: 3
# A set of users will be added to docker group
docker_users: []
docker_edition: "ce"
docker_pkg: "docker-{{ docker_edition }}"
docker_pkg_version:

##############
# Pypi options
##############

pip_repository: "{{ pip_repository }}"

######################
# Yum Local repository
######################
use_local_repo: "{{ use_local_repo }}"

##################
# Service options
##################

enable_prometheus_server: "yes"
enable_prometheus_exporter: "yes"
enable_prometheus_node_exporter: "yes"
enable_prometheus_rabbit_exporter: "no"
enable_prometheus_snmp_exporter: "no"
enable_prometheus_cadvisor: "yes"
enable_grafana: "no"
enable_prometheus_alertmanager: "yes"
enable_haproxy: "yes"
enable_keepalived: "{{ enable_haproxy }}"
enable_prometheus_snmp_exporter_dell_server: "no"
enable_prometheus_snmp_exporter_hpe_device: "no"
enable_prometheus_snmp_exporter_fujitsu_server: "no"
enable_prometheus_snmp_exporter_switch: "no"
enable_prometheus_snmp_exporter_huawei_device: "no"
enable_prometheus_container_status_exporter: "no"
enable_prometheus_nocpro_alert: "no"
# By default, enable fluentd whenever using
# fluentd logging driver
enable_fluentd: "{{ docker_log_driver == 'fluentd' }}"

##################
# Port mappings
#################

prometheus_server_port: "9090"
prometheus_alertmanager_port: "9093"
prometheus_alertmanager_cluster_port: "9094"
prometheus_node_exporter_port: "9100"
prometheus_rabbit_exporter_port: "5557"
prometheus_unsee_dashboard_port: "55550"
prometheus_cadvisor_port: "8080"
grafana_listen_port: "5555"
prometheus_snmp_exporter_dell_server_port: "9116"
prometheus_snmp_exporter_hpe_device_port: "9117"
prometheus_snmp_exporter_switch_port: "9118"
prometheus_snmp_exporter_huawei_device_port: "9119"
prometheus_snmp_exporter_fujitsu_server_port: "9120"
prometheus_container_status_exporter_port: "9800"

fluentd_syslog_port: "5140"
# Fluentd listen port must be match with
# docker_log_opts.fluentd-address config
# if docker_log_driver == 'fluentd'
fluentd_listen_port: "24224"

###############
# Image version
###############

prometheus_server_ver: "v2.19.1"
prometheus_alertmanager_ver: "v0.19.0"
prometheus_node_exporter_ver: "v1.0.1"
prometheus_rabbit_exporter_ver: "v0.29.0"
prometheus_cadvisor_ver: "v0.35.0"
prometheus_snmp_exporter_ver: "v0.15.0"
prometheus_container_status_exporter_ver: "v0.1.0"
grafana_ver: "7.2.2"
haproxy_ver: "1.8.20"
keepalived_ver: "2.0.17"
fluentd_ver: "v1.9"

##########################
# Service docker namespace
##########################

prometheus_docker_namespace: "{{ docker_namespace if docker_namespace else 'prom' }}"
grafana_docker_namespace: "{{ docker_namespace if docker_namespace else 'grafana' }}"
# Non-prom exporters
prometheus_cadvisor_docker_namespace: "{{ docker_namespace if docker_namespace else 'google-containers' }}"
prometheus_rabbit_exporter_docker_namespace: "{{ docker_namespace if docker_namespace else 'kbudde'}}"
keepalived_docker_namespace: "{{ docker_namespace if docker_namespace else 'kiennt26' }}"
haproxy_docker_namespace: "{{ docker_namespace if docker_namespace else '' }}"
fluentd_docker_namespace: "{{ docker_namespace if docker_namespace else 'kiennt26' }}"

####################
# Prometheus options
####################

prometheus_storage_retention: "90d"
prometheus_external_labels: # This is a dictionary variable
  monitor: "cloud"
prometheus_scrape_interval: "60s"
prometheus_scrape_timeout: "30s"
prometheus_evaluation_interval: "120s"

##########################
# Rabbit container options
##########################

rabbit_url: "http://localhost:15672"
rabbit_user: "admin"
rabbit_password: "rabbitpassword"
rabbit_log_level: "debug"
rabbit_output_format: "json"

#################
# Grafana options
#################

##################
# Grafana options
##################
# Please check http://docs.grafana.org/installation/configuration/
grafana_database:
  type: sqlite3
  # name: grafana
  # host: 127.0.0.1
  # usere: admin
  # password: "KbJdz8*U" # Please change me
grafana_remote_cache: {}
grafana_security:
  admin_user: "admin"
  admin_password: "YJ97&Yz$" # Please change me
  #  secret_key: ""
  #  login_remember_days: 7
  #  cookie_username: grafana_user
  #  cookie_remember_name: grafana_remember
  #  disable_gravatar: true
  #  data_source_proxy_whitelist:
grafana_session: {}
#  provider: file
#  provider_config: "sessions"
# grafana authentication mechanisms
grafana_auth: {}
#  disable_login_form: false
#  oauth_auto_login: false
#  disable_signout_menu: false
#  signout_redirect_url: ""
#  anonymous:
#    org_name: "Main Organization"
#    org_role: Viewer
#  ldap:
#    config_file: "/etc/grafana/ldap.toml"
#    allow_sign_up: false
#  basic:
#    enabled: true
grafana_users:
  allow_sign_up: false
  # allow_org_create: true
  # auto_assign_org: true
  auto_assign_org_role: Viewer
  # login_hint: "email or username"
  default_theme: dark
  # external_manage_link_url: ""
  # external_manage_link_name: ""
  # external_manage_info: ""

###############
# Alert options
###############

alert_via_email: "yes"
alert_mail_account: "{{ alert_mail_acount }}"
alert_mail_host: "{{ alert_mail_host }}"
alert_mail_port: "{{ alert_mail_port }}"
alert_mail_password: "{{ alert_mail_password }}"
alert_via_slack: "no"
alert_slack_channel: "{{ alert_slack_channel }}"
alert_slack_webhook_id: "{{ alert_slack_webhook_id }}"

#######################
# Elasticsearch options
#######################
es_address: "127.0.0.1"
es_port: "9200"
es_username:
es_password:
